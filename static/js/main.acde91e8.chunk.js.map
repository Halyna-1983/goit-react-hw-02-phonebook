{"version":3,"sources":["components/InputForm/InputForm.js","components/ContactsList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["InputForm","state","name","number","community","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","className","htmlFor","type","pattern","title","required","onChange","id","placeholder","checked","Component","ContactList","contacts","deleteContact","map","contact","onClick","Filter","valueState","filterByName","App","filter","contactId","prevState","formSubmitHandler","some","alert","normalizedThisFilterState","toLowerCase","visibleContacts","includes","ReactDOM","render","document","getElementById"],"mappings":"6WA+GeA,E,4MAzGXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,GACRC,UAAW,W,EAGjBC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAE1BE,aAAe,SAAAC,GAAU,IAAD,EACpB,EAAsBA,EAAMC,cAArBT,EAAP,EAAOA,KAAMU,EAAb,EAAaA,MAEb,EAAKC,UAAL,mBACKX,EAAOU,GADZ,mBAEQN,IAAQC,YAFhB,K,EAMJO,aAAe,SAAAC,GACbA,EAAEC,iBAEA,EAAKC,MAAMC,SAAS,EAAKjB,OAEzB,EAAKkB,S,EAGTA,MAAQ,WACJ,EAAKN,SAAS,CAAEX,KAAM,GAAIC,OAAQ,M,4CAGtC,WACE,OAEE,uBAAOe,SAAUE,KAAKN,aAAtB,UACE,wBAAOO,UAAU,aAAaC,QAASF,KAAKf,YAA5C,iBAEE,uBACEkB,KAAK,OACLrB,KAAK,OACLmB,UAAU,QACVG,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOQ,KAAKnB,MAAMC,KAClByB,SAAUP,KAAKX,aACfmB,GAAIR,KAAKf,YACTwB,YAAY,kBAGhB,wBAAOR,UAAU,aAAaC,QAASF,KAAKZ,cAA5C,mBAEI,uBACAe,KAAK,MACLrB,KAAK,SACLmB,UAAU,QACVG,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRd,MAAOQ,KAAKnB,MAAME,OAClBwB,SAAUP,KAAKX,aACfmB,GAAIR,KAAKZ,cACTqB,YAAY,oBAElB,uBAEJ,4BAAWR,UAAU,QAArB,UACE,wBAAOA,UAAU,aAAjB,UACE,uBACAE,KAAK,QACLrB,KAAK,YACLU,MAAM,SACNe,SAAUP,KAAKX,aACfqB,QAAkC,WAAzBV,KAAKnB,MAAMG,YANtB,YAUA,wBAAOiB,UAAU,aAAjB,UACE,uBACAE,KAAK,QACLrB,KAAK,YACLU,MAAM,UACNe,SAAUP,KAAKX,aACfqB,QAAkC,YAAzBV,KAAKnB,MAAMG,YANtB,aAUA,wBAAOiB,UAAU,aAAjB,UACE,uBACAE,KAAK,QACLrB,KAAK,YACLU,MAAM,MACNe,SAAUP,KAAKX,aACfqB,QAAkC,QAAzBV,KAAKnB,MAAMG,YANtB,SAUE,uBAEE,wBAAQmB,KAAK,SAASF,UAAU,SAAhC,mC,GAnGkBU,aCYTC,G,MAdK,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,cAAZ,OAClB,oBAAIb,UAAU,eAAd,SACKY,EAASE,KAAI,SAAAC,GAAO,OACnB,qBAAIf,UAAU,oBAAd,UACE,4BAAIe,EAAQlC,OACZ,4BAAIkC,EAAQjC,SAEhB,wBAAQoB,KAAK,SAASc,QAAS,kBAAMH,EAAcE,EAAQR,KAA3D,sCCISU,G,MAVA,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aAC3B,OACE,wBAAOnB,UAAU,eAAjB,mBAEE,uBAAOE,KAAK,OAAOF,UAAU,eAAeT,MAAO2B,EAAYZ,SAAUa,SCyDhEC,G,kNAxDbxC,MAAQ,CACNgC,SAAU,CACR,CAACL,GAAI,OAAQ1B,KAAM,gBAAiBC,OAAQ,aAC5C,CAACyB,GAAI,OAAQ1B,KAAM,iBAAkBC,OAAQ,aAC7C,CAACyB,GAAI,OAAQ1B,KAAM,gBAAiBC,OAAQ,aAC5C,CAACyB,GAAI,OAAQ1B,KAAM,iBAAkBC,OAAQ,cAE/CuC,OAAQ,GACRxC,KAAM,GACNC,OAAQ,I,EAIV+B,cAAgB,SAACS,GACf,EAAK9B,UACH,SAAA+B,GAAS,MAAK,CAACX,SAAUW,EAAUX,SAASS,QAAO,SAAAN,GAAO,OAAIO,IAAcP,EAAQR,W,EAIxFiB,kBAAoB,YAAuB,IAApB3C,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3B,GAAI,EAAKF,MAAMgC,SAASa,MAAK,SAAAV,GAAO,OAAIA,EAAQlC,OAASA,KACvD6C,MAAM,GAAD,OAAI7C,EAAJ,iCADP,CAKA,IAAMkC,EAAU,CAAER,GAAItB,IAAQC,WAAYL,OAAMC,UAChD,EAAKU,UACH,SAAA+B,GAAS,MAAK,CAAEX,SAAS,CAAEG,GAAH,mBAAeQ,EAAUX,iB,EAIrDS,OAAS,SAAChC,GACR,EAAKG,SACH,CAAE6B,OAAQhC,EAAMC,cAAcC,S,4CAKlC,WACE,IAAMoC,EAA4B5B,KAAKnB,MAAMyC,OAAOO,cAC9CC,EAAkB9B,KAAKnB,MAAMgC,SAASS,QAAO,SAAAN,GAAO,OACxDA,EAAQlC,KAAK+C,cAAcE,SAASH,MAEtC,OACE,qCACA,6CACA,cAAE,EAAF,CAAY9B,SAAUE,KAAKyB,oBAC3B,cAAC,EAAD,CAAQN,WAAYnB,KAAKnB,MAAMyC,OAAQF,aAAepB,KAAKsB,SAC3D,cAAC,EAAD,CAAaT,SAAUiB,EAAiBhB,cAAed,KAAKc,uB,GAjDhDH,cCFlBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.acde91e8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport shortid from 'shortid';\r\nimport './InputForm.css';\r\n\r\nclass InputForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',  \r\n        community: 'friends',\r\n      };\r\n      \r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\nhandleChange = event => {\r\n    const {name, value} = event.currentTarget\r\n\r\n    this.setState({ \r\n        [name]: value,\r\n        id: shortid.generate(),\r\n    });\r\n};\r\n    \r\nhandleSubmit = e => {\r\n  e.preventDefault();\r\n    \r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n};\r\n\r\nreset = () => {\r\n    this.setState({ name: '', number: '' })\r\n};\r\n\r\nrender() {\r\n  return (\r\n\r\n    <form  onSubmit={this.handleSubmit}>\r\n      <label className=\"input-form\" htmlFor={this.nameInputId}>\r\n      Name \r\n        <input \r\n          type=\"text\" \r\n          name=\"name\"\r\n          className=\"label\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name} \r\n          onChange={this.handleChange}\r\n          id={this.nameInputId}\r\n          placeholder=\"Input name\" />\r\n      </label>\r\n\r\n      <label className=\"input-form\" htmlFor={this.numberInputId}>\r\n      Number \r\n          <input \r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className=\"label\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number} \r\n          onChange={this.handleChange}\r\n          id={this.numberInputId}\r\n          placeholder=\"Input number\"/>\r\n        </label>\r\n    <br />\r\n        \r\n<container className=\"radio\">\r\n  <label className=\"radio-form\">\r\n    <input \r\n    type=\"radio\" \r\n    name=\"community\" \r\n    value=\"family\" \r\n    onChange={this.handleChange}\r\n    checked={this.state.community === 'family'} \r\n    />family\r\n  </label>\r\n\r\n  <label className=\"radio-form\">\r\n    <input \r\n    type=\"radio\" \r\n    name=\"community\" \r\n    value=\"friends\" \r\n    onChange={this.handleChange}\r\n    checked={this.state.community === 'friends'}\r\n    />friends\r\n  </label>\r\n\r\n  <label className=\"radio-form\">\r\n    <input \r\n    type=\"radio\" \r\n    name=\"community\" \r\n    value=\"job\" \r\n    onChange={this.handleChange}\r\n    checked={this.state.community === 'job'}\r\n    />job\r\n  </label>\r\n        \r\n    <br />\r\n\r\n      <button type=\"submit\" className=\"button\">Add contact</button>\r\n     </container>\r\n  </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\nimport './ContactList.css';\r\n\r\nconst ContactList = ({contacts, deleteContact}) => (\r\n  <ul className=\"contact-list\">\r\n      {contacts.map(contact => \r\n        <li className=\"contact-list-item\" >\r\n          <p>{contact.name}</p>\r\n          <p>{contact.number}</p>\r\n\r\n      <button type=\"button\" onClick={() => deleteContact(contact.id)}>Delete contact</button>\r\n        </li>)\r\n      }\r\n\r\n</ul>\r\n)\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport './Filter.css';\r\n\r\n\r\nconst Filter = ({valueState, filterByName}) => {\r\n  return (\r\n    <label className=\"label-filter\">\r\n        Filter\r\n      <input type=\"text\" className=\"input-filter\" value={valueState} onChange={filterByName}/>\r\n      \r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Filter;","import React, {Component} from 'react';\nimport InputForm from './components/InputForm';\nimport ContactList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport shortid from 'shortid';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n    name: '',\n    number: ''\n  };\n\n\n  deleteContact = (contactId) => {\n    this.setState(\n      prevState => ({contacts: prevState.contacts.filter(contact => contactId !== contact.id)})\n    )\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    if (this.state.contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const contact = { id: shortid.generate(), name, number };\n    this.setState(\n      prevState => ({ contacts: [contact, ...prevState.contacts] })\n    );\n  };\n\n  filter = (event) => {\n    this.setState(\n      { filter: event.currentTarget.value\n      }\n    )\n  }\n\n  render() {\n    const normalizedThisFilterState = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedThisFilterState),\n    );\n    return (\n      <>\n      <h1> Phonebook </h1>\n      < InputForm onSubmit={this.formSubmitHandler}/>\n      <Filter valueState={this.state.filter} filterByName={ this.filter}/>\n      <ContactList contacts={visibleContacts} deleteContact={this.deleteContact} />\n     \n      </>\n      \n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}